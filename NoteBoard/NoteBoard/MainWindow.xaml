<Window x:Class="NoteBoard.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:local="clr-namespace:NoteBoard"
        xmlns:col="clr-namespace:System.Collections;assembly=mscorlib"
        mc:Ignorable="d"
        xmlns:p="clr-namespace:NoteBoard.Properties"
        
        Title="NoteBoard" 
        Background="{DynamicResource MainBackgroundBrush}" 
        BorderThickness="1"
        AllowsTransparency="False"
        WindowStyle="ThreeDBorderWindow" 
        SnapsToDevicePixels="True"
        UseLayoutRounding="True"
        TextOptions.TextFormattingMode="Ideal"
        WindowStartupLocation="CenterScreen" 
        WindowState="Maximized" 
        HorizontalContentAlignment="Stretch" 
        VerticalContentAlignment="Stretch"
        MinWidth="950" 
        MinHeight="553"
        Closing="Window_Closing">


    <Window.Resources>
        <local:BuyNowCollection x:Key="BuyNowCollection" />
        <CollectionViewSource x:Key="BuyNowCollectionViewSource" Source="{StaticResource BuyNowCollection}" />

        <local:DoNowCollection x:Key="DoNowCollection" />
        <CollectionViewSource x:Key="DoNowCollectionViewSource" Source="{StaticResource DoNowCollection}" 
                              Filter="DoNowCollectionViewSource_Filter">
            <CollectionViewSource.SortDescriptions>
                <scm:SortDescription PropertyName="Time" />
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>

        <local:BuyLaterCollection x:Key="BuyLaterCollection" />
        <CollectionViewSource x:Key="BuyLaterCollectionViewSource" Source="{StaticResource BuyLaterCollection}">
            <CollectionViewSource.SortDescriptions>
                <scm:SortDescription PropertyName="MonthId" />
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>

        <local:ChooseMonths x:Key="ChooseMonths" />
        <CollectionViewSource x:Key="ChooseMonthsViewSource" Source="{StaticResource ChooseMonths}" />

        <local:ChooseTimes x:Key="ChooseTimes" />
        <CollectionViewSource x:Key="ChooseTimesViewSource" Source="{StaticResource ChooseTimes}" />

        <local:NumericConverter x:Key="NumericConverter" />

        <Style TargetType="DataGrid">
            <Setter Property="SelectionMode" Value="Single" />
            <Setter Property="SelectionUnit" Value="FullRow" />
            <Setter Property="HeadersVisibility" Value="Column" />
            <Setter Property="AutoGenerateColumns" Value="False" />
            <Setter Property="CanUserAddRows" Value="False" />
            <Setter Property="CanUserDeleteRows" Value="True" />
            <Setter Property="CanUserResizeColumns" Value="True" />
            <Setter Property="CanUserSortColumns" Value="True" />
            <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="AlternationCount" Value="2" />
            <Setter Property="FontWeight" Value="Normal" />
            <Setter Property="Background" Value="{DynamicResource MainBackgroundBrush}" />
        </Style>

        <Style TargetType="DataGridRow">
            <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
            <Style.Triggers>
                <Trigger Property="AlternationIndex" Value="0">
                    <Setter Property="Background" Value="{DynamicResource DatagridRowBrush}" />
                </Trigger>
                <Trigger Property="AlternationIndex" Value="1">
                    <Setter Property="Background" Value="{DynamicResource DatagridAlternateRowBrush}" />
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="AlternationIndex" Value="1" />
                        <Condition Property="IsSelected" Value="True" />
                    </MultiTrigger.Conditions>
                    <MultiTrigger.Setters>
                        <Setter Property="Background" Value="{DynamicResource DatagridAlternateRowBrush}" />
                        <Setter Property="FontWeight" Value="Bold" />
                    </MultiTrigger.Setters>
                </MultiTrigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="AlternationIndex" Value="0" />
                        <Condition Property="IsSelected" Value="True" />
                    </MultiTrigger.Conditions>
                    <MultiTrigger.Setters>
                        <Setter Property="Background" Value="{DynamicResource DatagridRowBrush}" />
                        <Setter Property="FontWeight" Value="Bold" />
                    </MultiTrigger.Setters>
                </MultiTrigger>
                <DataTrigger Binding="{Binding Path=IsValid}" Value="False">
                    <Setter Property="Foreground" Value="{DynamicResource NotificationBrush}" />
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="DataGridCell">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="{DynamicResource DatagridForegroundBrush}" />
            <Setter Property="BorderThickness" Value="0" />
            <Style.Triggers>
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="BorderBrush" Value="{DynamicResource DatagridFocusedCellBorderBrush}" />
                    <Setter Property="BorderThickness" Value="1" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="DataGridColumnHeader">
            <Setter Property="DataGridColumnHeader.Background" Value="{DynamicResource DatagridHeaderBackgroundBrush}" />
            <Setter Property="DataGridColumnHeader.Foreground" Value="{DynamicResource DatagridHeaderForegroundBrush}" />
            <Setter Property="DataGridColumnHeader.BorderBrush" Value="{DynamicResource BorderBrush}" />
            <Setter Property="DataGridColumnHeader.BorderThickness" Value="0.6" />
            <Setter Property="DataGridColumnHeader.HorizontalContentAlignment" Value="Center" />
            <Setter Property="DataGridColumnHeader.FontWeight" Value="Bold" />
        </Style>

        <Style x:Key="HeaderTextBlockStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="20" />
            <Setter Property="Foreground" Value="{DynamicResource MainForegroundBrush}" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Top" />
        </Style>

        <Style TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate x:Name="ButtonStyle" TargetType="Button">
                        <Border x:Name="ButtonBorder"
                                Background="{DynamicResource ButtonBackgroundBrush}"
                                TextBlock.Foreground="{DynamicResource ButtonForegroundBrush}"
                                Margin="2"
                                CornerRadius="2"
                                BorderThickness="1"
                                BorderBrush="{DynamicResource ButtonBorderBrush}">
                            <ContentPresenter Margin="5, 2"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              RecognizesAccessKey="True" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="{DynamicResource ButtonPressedBorderBrush}" />
                                <Setter TargetName="ButtonBorder" Property="Background" Value="{DynamicResource ButtonPressedBackgroundBrush}" />
                                <Setter TargetName="ButtonBorder" Property="TextBlock.Foreground" Value="{DynamicResource ButtonPressedForegroundBrush}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="ButtonBorder" Property="BorderThickness" Value="2" />
                                <Setter TargetName="ButtonBorder" Property="Margin" Value="1" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <SolidColorBrush x:Key="Expander.MouseOver.Circle.Stroke" Color="{DynamicResource MainBackgroundColor}" />
        <SolidColorBrush x:Key="Expander.MouseOver.Circle.Fill" Color="{DynamicResource MainForegroundColor}" />
        <SolidColorBrush x:Key="Expander.MouseOver.Arrow.Stroke" Color="{DynamicResource MainBackgroundColor}" />
        <SolidColorBrush x:Key="Expander.Pressed.Circle.Stroke" Color="{DynamicResource MainForegroundColor}" />
        <SolidColorBrush x:Key="Expander.Pressed.Circle.Fill" Color="{DynamicResource MainBackgroundColor}" />
        <SolidColorBrush x:Key="Expander.Pressed.Arrow.Stroke" Color="{DynamicResource MainForegroundColor}" />
        <SolidColorBrush x:Key="Expander.Static.Circle.Fill" Color="{DynamicResource MainBackgroundColor}" />
        <SolidColorBrush x:Key="Expander.Static.Circle.Stroke" Color="{DynamicResource MainForegroundColor}" />
        <SolidColorBrush x:Key="Expander.Static.Arrow.Stroke" Color="{DynamicResource MainForegroundColor}" />

        <Style x:Key="ExpanderHeaderFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border>
                            <Rectangle Margin="0" SnapsToDevicePixels="true" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Padding="{TemplateBinding Padding}">
                            <Grid Background="Transparent" SnapsToDevicePixels="True">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="19" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Ellipse x:Name="circle" Fill="{StaticResource Expander.Static.Circle.Fill}" HorizontalAlignment="Center" Height="19" Stroke="{StaticResource Expander.Static.Circle.Stroke}" VerticalAlignment="Center" Width="19" />
                                <Path x:Name="arrow" Data="M 0,5 H 10 M 5,0 V 10" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="{StaticResource Expander.Static.Arrow.Stroke}" StrokeThickness="2" VerticalAlignment="Center" />
                                <ContentPresenter Grid.Column="1" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Data" TargetName="arrow" Value="M 0,2 H 10" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}" />
                                <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Fill}" />
                                <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}" />
                                <Setter Property="StrokeThickness" TargetName="circle" Value="1.5" />
                                <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Fill}" />
                                <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type Expander}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="VerticalContentAlignment" Value="Stretch" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Expander}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3" SnapsToDevicePixels="true">
                            <DockPanel>
                                <ToggleButton x:Name="HeaderSite" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" Content="{TemplateBinding Header}" DockPanel.Dock="Top" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" MinWidth="0" MinHeight="0" Padding="{TemplateBinding Padding}" Style="{StaticResource ExpanderDownHeaderStyle}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                                <ContentPresenter x:Name="ExpandSite" DockPanel.Dock="Bottom" Focusable="false" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </DockPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="true">
                                <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible" />
                                <Setter Property="Expander.BorderBrush" Value="{DynamicResource MainForegroundBrush}" />
                            </Trigger>
                            <Trigger Property="IsExpanded" Value="false">
                                <Setter Property="Expander.BorderBrush" Value="Transparent" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Label">
            <Setter Property="Foreground" Value="{DynamicResource MainForegroundBrush}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="FontWeight" Value="DemiBold" />
        </Style>

        <Style TargetType="ComboBox">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="{DynamicResource MainForegroundBrush}" />
            <Setter Property="Foreground" Value="{DynamicResource MainForegroundBrush}" />
            <Style.Triggers>
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Foreground" Value="{DynamicResource BorderBrush}" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="{DynamicResource BorderBrush}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="ComboBoxItem">
            <Setter Property="Background" Value="{DynamicResource MainForegroundBrush}" />
            <Setter Property="Foreground" Value="{DynamicResource AlternativeForegroundBrush}" />
            <Setter Property="BorderThickness" Value="0.5" />
            <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
            <Style.Triggers>
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="FontWeight" Value="Bold" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="ScrollBar">
            <Setter Property="Background" Value="Transparent" />
        </Style>
        
        <Style x:Key="DockPanelStyle" TargetType="DockPanel">
            <Setter Property="Background" Value="{DynamicResource AdditiveBackgroundBrush}" />
            <Setter Property="Margin" Value="1" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
        </Style>

        <Style TargetType="TabControl">
            <Setter Property="Background" Value="{DynamicResource PanelBackgroundBrush}" />
        </Style>

        <Style TargetType="TabItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Border Name="Border"
                                Background="{DynamicResource MainBackgroundBrush}"
                                BorderThickness="1,1,1,0"
                                BorderBrush="Transparent">
                            <ContentPresenter x:Name="Content" VerticalAlignment="Center"
                                              HorizontalAlignment="Center"
                                              ContentSource="Header"
                                              RecognizesAccessKey="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource PanelBackgroundBrush}" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="CalendarStyle" TargetType="Calendar">
            <Setter Property="Background" Value="{DynamicResource CalendarBackgroundBrush}" />
            <Setter Property="IsTodayHighlighted" Value="True" />
        </Style>

        <Style x:Key="NotificationAreaStyle" TargetType="Border">
            <Setter Property="Background" Value="{DynamicResource NotificationAreaBrush}" />
            <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
            <Setter Property="BorderThickness" Value="3" />
        </Style>

        <Style x:Key="NotificationsStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{DynamicResource BorderBrush}" />
        </Style>

        <Storyboard x:Key="Animation">
            <ColorAnimation From="{DynamicResource BorderColor}" 
                            To="{DynamicResource NotificationColor}" 
                            AutoReverse="True" 
                            Storyboard.TargetProperty="BorderBrush.Color" 
                            Duration="0:0:0.500" />
            <ColorAnimation From="{DynamicResource NotificationAreaColor}" 
                            To="{DynamicResource NotificationColor}" 
                            AutoReverse="True" 
                            Storyboard.TargetProperty="Background.Color" 
                            Duration="0:0:0.500" />
        </Storyboard>

    </Window.Resources>

    <Grid Name="MainGrid">
        <Grid.RowDefinitions>
            <RowDefinition Height="50" />
            <RowDefinition Height="*" MinHeight="250" />
            <RowDefinition Height="100" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" MinWidth="150" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" MinWidth="150" />
        </Grid.ColumnDefinitions>
        <Grid ShowGridLines="True" />

        <!-- ЗАГОЛОВОК ПРОГРАММЫ -->
        <TextBlock Text="Note Board" 
                   Style="{DynamicResource HeaderTextBlockStyle}" 
                   Grid.Column="0" 
                   Grid.ColumnSpan="4" 
                   Grid.Row="0" 
                   FontSize="30" 
                   FontWeight="Medium" />


        <!-- ОБЛАСТЬ ПОКУПОК -->
        <Grid Name="LeftGrid" Grid.Row="1" VerticalAlignment="Stretch">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <GridSplitter Name="gridSplitter1" 
                          Grid.Row="1" 
                          ResizeDirection="Rows" 
                          ResizeBehavior="PreviousAndNext" 
                          VerticalAlignment="Stretch" 
                          Height="3" 
                          HorizontalAlignment="Stretch" 
                          Background="{DynamicResource BorderBrush}" />

            <!-- Область текущих покупок -->
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <TextBlock Text="Текущие покупки" Style="{DynamicResource HeaderTextBlockStyle}" />
                <DataGrid x:Name="ToBuyNow" 
                          Grid.Row="1"
                          Focusable="True"
                          ItemsSource="{Binding Source={StaticResource BuyNowCollectionViewSource}, 
                                                UpdateSourceTrigger=PropertyChanged, 
                                                NotifyOnTargetUpdated=True, 
                                                NotifyOnValidationError=True, 
                                                ValidatesOnDataErrors=True, 
                                                ValidatesOnExceptions=True, 
                                                NotifyOnSourceUpdated=True}">
                    <DataGrid.Resources>
                    </DataGrid.Resources>
                    <DataGrid.RowValidationRules>
                        <DataErrorValidationRule ValidationStep="UpdatedValue" ValidatesOnTargetUpdated="True" />
                    </DataGrid.RowValidationRules>
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Наименование" 
                                            Width="3*" 
                                            Binding="{Binding Path=Title, 
                                                              ValidatesOnDataErrors=True, 
                                                              ValidatesOnExceptions=True, 
                                                              NotifyOnTargetUpdated=True, 
                                                              UpdateSourceTrigger=PropertyChanged, 
                                                              Mode=TwoWay, 
                                                              NotifyOnSourceUpdated=True, 
                                                              NotifyOnValidationError=True}" />
                        <DataGridTextColumn Header="Количество" 
                                            Width="*"
                                            Binding="{Binding Path=Quantity, 
                                                              ValidatesOnDataErrors=True, 
                                                              ValidatesOnExceptions=True, 
                                                              NotifyOnTargetUpdated=True, 
                                                              UpdateSourceTrigger=PropertyChanged, 
                                                              Mode=TwoWay, 
                                                              NotifyOnSourceUpdated=True, 
                                                              NotifyOnValidationError=True, 
                                                              Converter={StaticResource NumericConverter}}" />
                        <DataGridTextColumn Header="Цена" 
                                            Width="*"
                                            Binding="{Binding Path=Price, 
                                                              ValidatesOnDataErrors=True, 
                                                              ValidatesOnExceptions=True, 
                                                              NotifyOnTargetUpdated=True, 
                                                              UpdateSourceTrigger=PropertyChanged, 
                                                              Mode=TwoWay, 
                                                              NotifyOnSourceUpdated=True, 
                                                              NotifyOnValidationError=True, 
                                                              Converter={StaticResource NumericConverter}}" />
                        <DataGridTemplateColumn>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <TextBlock x:Name="DelRow" 
                                                   Text="x" 
                                                   FontWeight="Bold" 
                                                   Foreground="Red" 
                                                   TextAlignment="Center"
                                                   VerticalAlignment="Stretch" 
                                                   HorizontalAlignment="Stretch" 
                                                   Panel.ZIndex="0">
                                            <TextBlock.Background>
                                                <VisualBrush Opacity="0" />
                                            </TextBlock.Background>
                                        </TextBlock>
                                        <Button x:Name="DeleteRow" 
                                                Content="x" 
                                                Command="Delete" 
                                                Opacity="0" 
                                                Panel.ZIndex="1"
                                                VerticalAlignment="Stretch" 
                                                HorizontalAlignment="Stretch" />
                                    </Grid>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>
                <DockPanel VerticalAlignment="Bottom" 
                           Grid.Row="2"
                           Style="{DynamicResource DockPanelStyle}">
                    <Button x:Name="AddBuyNowButton"
                            HorizontalAlignment="Left" 
                            Margin="25, 5" 
                            Content="Добавить запись" 
                            Click="AddBuyNowButton_Click" />
                    <Button x:Name="DeleteAllBuyNow"
                            HorizontalAlignment="Center" 
                            Margin="25, 5" 
                            Content="Удалить все записи" 
                            Click="DeleteAllBuyNow_Click" />
                </DockPanel>
            </Grid>

            <!-- Область будущих покупок -->
            <Grid Grid.Row="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <TextBlock Text="Будущие покупки" 
                           Style="{DynamicResource HeaderTextBlockStyle}" />
                <DataGrid x:Name="ToBuyLater" 
                          Focusable="True" 
                          Grid.Row="1"
                          ItemsSource="{Binding Source={StaticResource BuyLaterCollectionViewSource}, 
                                                ValidatesOnDataErrors=True, 
                                                ValidatesOnExceptions=True, 
                                                NotifyOnTargetUpdated=True, 
                                                UpdateSourceTrigger=PropertyChanged, 
                                                NotifyOnSourceUpdated=True, 
                                                NotifyOnValidationError=True}">
                    <DataGrid.Resources>
                    </DataGrid.Resources>
                    <DataGrid.RowValidationRules>
                        <DataErrorValidationRule ValidationStep="UpdatedValue" ValidatesOnTargetUpdated="True" />
                    </DataGrid.RowValidationRules>
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Наименование" Width="3*" 
                                            Binding="{Binding Path=Title, 
                                                              ValidatesOnDataErrors=True, 
                                                              ValidatesOnExceptions=True, 
                                                              NotifyOnTargetUpdated=True, 
                                                              UpdateSourceTrigger=PropertyChanged, 
                                                              Mode=TwoWay, 
                                                              NotifyOnSourceUpdated=True, 
                                                              NotifyOnValidationError=True}">
                            <DataGridTextColumn.ElementStyle>
                                <Style>
                                    <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Header="Количество" 
                                            Width="*" 
                                            Binding="{Binding Path=Quantity, 
                                                              ValidatesOnDataErrors=True, 
                                                              ValidatesOnExceptions=True, 
                                                              NotifyOnTargetUpdated=True, 
                                                              UpdateSourceTrigger=PropertyChanged, 
                                                              Mode=TwoWay, 
                                                              NotifyOnSourceUpdated=True, 
                                                              NotifyOnValidationError=True, 
                                                              Converter={StaticResource NumericConverter}}" />
                        <DataGridTextColumn Header="Цена" 
                                            Width="*" 
                                            Binding="{Binding Path=Price, 
                                                              ValidatesOnDataErrors=True, 
                                                              ValidatesOnExceptions=True, 
                                                              NotifyOnTargetUpdated=True, 
                                                              UpdateSourceTrigger=PropertyChanged, 
                                                              Mode=TwoWay, 
                                                              NotifyOnSourceUpdated=True, 
                                                              NotifyOnValidationError=True, 
                                                              Converter={StaticResource NumericConverter}}" />
                        <DataGridComboBoxColumn Header="Месяц" 
                                                x:Name="BuyLaterMonth" 
                                                Width="*" 
                                                DisplayMemberPath="Month" 
                                                SortMemberPath="MonthId"
                                                SelectedValueBinding="{Binding Path=Month, 
                                                                               Mode=TwoWay, 
                                                                               NotifyOnSourceUpdated=True, 
                                                                               UpdateSourceTrigger=PropertyChanged, 
                                                                               ValidatesOnExceptions=True, 
                                                                               ValidatesOnDataErrors=True}" 
                                                SelectedValuePath="Month"
                                                ItemsSource="{Binding Source={StaticResource ChooseMonthsViewSource}, 
                                                                      Path=Month, 
                                                                      UpdateSourceTrigger=PropertyChanged, 
                                                                      NotifyOnSourceUpdated=True}">
                        </DataGridComboBoxColumn>
                        <DataGridTemplateColumn>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <TextBlock x:Name="DelRow" 
                                               Text="x" 
                                               FontWeight="Bold" 
                                               Foreground="Red" 
                                               TextAlignment="Center"
                                               VerticalAlignment="Stretch" 
                                               HorizontalAlignment="Stretch" 
                                               Panel.ZIndex="0">
                                            <TextBlock.Background>
                                                <VisualBrush Opacity="0" />
                                            </TextBlock.Background>
                                        </TextBlock>
                                        <Button x:Name="DeleteRow" 
                                            Content="x" 
                                            Command="Delete" 
                                            Opacity="0" 
                                            Panel.ZIndex="1"
                                            VerticalAlignment="Stretch" 
                                            HorizontalAlignment="Stretch" />
                                    </Grid>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>
                <DockPanel Grid.Row="2" 
                           VerticalAlignment="Bottom" 
                           Style="{DynamicResource DockPanelStyle}">
                    <Button x:Name="AddBuyLaterButton"
                            HorizontalAlignment="Left" 
                            Margin="25, 5" 
                            Content="Добавить запись" 
                            Click="AddBuyLaterButton_Click" />
                    <Button x:Name="DeleteAllBuyLater"
                            HorizontalAlignment="Center" 
                            Margin="25, 5" 
                            Content="Удалить все записи" 
                            Click="DeleteAllBuyLater_Click" />
                </DockPanel>
        </Grid>
        </Grid>

        <!-- ЕЖЕДНЕВНИК -->
        <Grid Name="RightGrid" Grid.Column="2" Grid.Row="1" VerticalAlignment="Stretch">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <TextBlock Text="Ежедневник" Style="{DynamicResource HeaderTextBlockStyle}" />

            <TabControl Grid.Row="1">
                <TabItem>
                    <TabItem.Header>
                        <TextBlock Text="Показать задачи"
                                   FontSize="15"
                                   Style="{DynamicResource HeaderTextBlockStyle}"/>
                    </TabItem.Header>
                    <TabItem.Content>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <!-- Выбор даты для показа задач -->
                            <Expander>
                                <Expander.Header>
                                    <TextBlock Text="Выбрать дату показа"
                                               Style="{DynamicResource HeaderTextBlockStyle}"
                                               FontSize="13"/>
                                </Expander.Header>
                                <Expander.Content>
                                    <StackPanel>
                                        <TextBlock Text='Показать задачи на дату: '
                                                   Style="{DynamicResource HeaderTextBlockStyle}"
                                                   FontSize="15" />
                                        <Calendar x:Name="CalendarShowingTasks"
                                                  SelectedDatesChanged="CalendarShowingTasks_SelectedDatesChanged"
                                                  Style="{DynamicResource CalendarStyle}">
                                        </Calendar>
                                        <Label HorizontalContentAlignment="Center">
                                            <Label.Content>
                                                <StackPanel Orientation="Horizontal">
                                                    <CheckBox x:Name="ShowNotCompleted" Margin="3"
                                                              IsChecked="False"
                                                              IsThreeState="False"
                                                              Click="ShowNotCompleted_Click" 
                                                              Foreground="{DynamicResource MainForegroundBrush}"
                                                              Content="Только невыполненные" />
                                                </StackPanel>
                                            </Label.Content>
                                        </Label>
                                    </StackPanel>
                                </Expander.Content>
                            </Expander>
                            <!-- Список задач на выбранный день -->
                            <TextBlock  Grid.Row="1" 
                                        Text="{Binding ElementName=CalendarShowingTasks, 
                                                   Path=SelectedDate, 
                                                   StringFormat=Список дел на {0:dd-MM-yyyy}}"
                                                   Style="{DynamicResource HeaderTextBlockStyle}" />

                            <DataGrid x:Name="ToDoNow" 
                                      Grid.Row="2"
                                      ItemsSource="{Binding Source={StaticResource DoNowCollectionViewSource}}" 
                                      CanUserSortColumns="True"
                                      CanUserDeleteRows="True"
                                      CanUserResizeColumns="True">
                                <DataGrid.Resources>
                                </DataGrid.Resources>
                                <DataGrid.RowValidationRules>
                                    <DataErrorValidationRule ValidationStep="UpdatedValue" ValidatesOnTargetUpdated="True" />
                                </DataGrid.RowValidationRules>
                                <DataGrid.Columns>
                                    <DataGridComboBoxColumn Header="Время" 
                                                            x:Name="DoNowTime" 
                                                            Width="*"
                                                            SelectedValueBinding="{Binding Path=Time, 
                                                                                           Mode=TwoWay, 
                                                                                           NotifyOnSourceUpdated=True, 
                                                                                           UpdateSourceTrigger=PropertyChanged, 
                                                                                           ValidatesOnDataErrors=True, 
                                                                                           ValidatesOnExceptions=True}"
                                                            SelectedValuePath="Time" 
                                                            DisplayMemberPath="Time"
                                                            ItemsSource="{Binding Source={StaticResource ChooseTimesViewSource}, 
                                                                                    Mode=TwoWay, 
                                                                                    NotifyOnSourceUpdated=True, 
                                                                                    Path=Time, 
                                                                                    UpdateSourceTrigger=PropertyChanged, 
                                                                                    ValidatesOnDataErrors=True, 
                                                                                    ValidatesOnExceptions=True}">
                                    </DataGridComboBoxColumn>
                                    <DataGridTextColumn Header="Задачи"  
                                                        Width="4*"
                                                        Binding="{Binding Path=Task, 
                                                                          ValidatesOnDataErrors=True, 
                                                                          ValidatesOnExceptions=True, 
                                                                          NotifyOnTargetUpdated=True, 
                                                                          UpdateSourceTrigger=PropertyChanged, 
                                                                          Mode=TwoWay, 
                                                                          NotifyOnSourceUpdated=True, 
                                                                          NotifyOnValidationError=True}">
                                        <DataGridTextColumn.ElementStyle>
                                            <Style>
                                                <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                                            </Style>
                                        </DataGridTextColumn.ElementStyle>
                                    </DataGridTextColumn>
                                    <DataGridComboBoxColumn Header="Важность" 
                                                            x:Name="DoNowUrgency" 
                                                            Width="*" 
                                                            DisplayMemberPath="Urgency" 
                                                            SelectedValuePath="Urgency"
                                                            SelectedValueBinding="{Binding Path=Urgency, 
                                                                                            Mode=TwoWay, 
                                                                                            NotifyOnSourceUpdated=True, 
                                                                                            ValidatesOnDataErrors=True, 
                                                                                            UpdateSourceTrigger=PropertyChanged}" />
                                    <DataGridCheckBoxColumn Header="Выполнено" 
                                                            Width="80"
                                                            Binding="{Binding Path=IsCompleted, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                        <DataGridCheckBoxColumn.ElementStyle>
                                            <Style TargetType="CheckBox">
                                                <Setter Property="HorizontalAlignment" Value="Center" />
                                                <Setter Property="VerticalAlignment" Value="Center" />
                                            </Style>
                                        </DataGridCheckBoxColumn.ElementStyle>
                                    </DataGridCheckBoxColumn>
                                    <DataGridTemplateColumn>
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Grid>
                                                    <TextBlock Text="x" 
                                                               FontWeight="Bold" 
                                                               Foreground="Red" 
                                                               TextAlignment="Center"
                                                               VerticalAlignment="Stretch" 
                                                               HorizontalAlignment="Stretch" 
                                                               Panel.ZIndex="0">
                                                        <TextBlock.Background>
                                                            <VisualBrush Opacity="0" />
                                                        </TextBlock.Background>
                                                    </TextBlock>
                                                    <Button Content="x" 
                                                            Click="DeleteDoNowItem_Click" 
                                                            Opacity="0" 
                                                            Panel.ZIndex="1"
                                                            VerticalAlignment="Stretch" 
                                                            HorizontalAlignment="Stretch" />
                                                </Grid>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                </DataGrid.Columns>
                            </DataGrid>
                            <!-- Кнопки удаления задач -->
                            <DockPanel Grid.Row="3" 
                                       Style="{DynamicResource DockPanelStyle}">
                                <Button x:Name="DeleteOldDoNow"
                                        Margin="5"
                                        Content="Удалить прошедшие задачи"
                                        Click="DeleteOldDoNow_Click" />
                                <Button x:Name="DeleteComplitedDoNow"
                                        Margin="5"
                                        Content="Удалить выполненные задачи"
                                        Click="DeleteComplitedDoNow_Click" />
                                <Button x:Name="DeleteAllDoNow" 
                                        Margin="5" 
                                        Content="Удалить все задачи" 
                                        Click="DeleteAllDoNow_Click" />
                            </DockPanel>

                        </Grid>
                    </TabItem.Content>
                </TabItem>
                <TabItem>
                    <TabItem.Header>
                        <TextBlock Text="Добавить новую задачу"
                                   FontSize="15"
                                   Style="{DynamicResource HeaderTextBlockStyle}"/>
                    </TabItem.Header>
                    <TabItem.Content>
                        <Grid HorizontalAlignment="Stretch" 
                              VerticalAlignment="Stretch">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <Label Content="Задача:" />

                            <TextBox x:Name="DoTask"
                                     Grid.Column="1"
                                     Margin="5"
                                     Height="100"
                                     Width="150"
                                     ScrollViewer.VerticalScrollBarVisibility="Auto"
                                     TextWrapping="Wrap"
                                     IsUndoEnabled="True" />

                            <Label Content="День:" 
                                   Grid.Row="1" 
                                   VerticalAlignment="Top" 
                                   Margin="3" />

                            <DatePicker Name="DoDate" 
                                        Grid.Row="1"
                                        Grid.Column="1"
                                        SelectedDate="{x:Static sys:DateTime.Now}" 
                                        SelectedDateFormat="Short" 
                                        DisplayDateStart="{x:Static sys:DateTime.Today}"
                                        Width="100" 
                                        Margin="3" 
                                        VerticalAlignment="Top"
                                        CalendarStyle="{DynamicResource CalendarStyle}" />

                            <Label Content="Время:" 
                                   Grid.Row="2" 
                                   VerticalAlignment="Top" 
                                   Margin="3" />

                            <ComboBox x:Name="DoTime" 
                                      Grid.Column="1" 
                                      Grid.Row="2" 
                                      VerticalAlignment="Top" 
                                      Margin="3" 
                                      ItemsSource="{Binding Source={StaticResource ChooseTimesViewSource}}" 
                                      DisplayMemberPath="Time" 
                                      IsSynchronizedWithCurrentItem="True" />

                            <Label Content="Важность:" 
                                   Grid.Row="3" 
                                   VerticalAlignment="Top" 
                                   Margin="3" />

                            <ComboBox x:Name="DoUrgency" 
                                      Grid.Column="1"
                                      Grid.Row="3"
                                      VerticalAlignment="Top" 
                                      Margin="3" 
                                      DisplayMemberPath="Urgency" 
                                      IsSynchronizedWithCurrentItem="True" />

                            <Button x:Name="AddDoNowButton"
                                    Grid.ColumnSpan="2" 
                                    Grid.Row="4" 
                                    Margin="5" 
                                    FontSize="15"
                                    Click="AddDoNowButton_Click">
                                <TextBlock x:Name="AddDoNowTextBlock" 
                                           TextWrapping="Wrap" 
                                           Text="Добавить в список дел" 
                                           VerticalAlignment="Center" 
                                           HorizontalAlignment="Center" />
                            </Button>
                        </Grid>
                    </TabItem.Content>
                </TabItem>
            </TabControl>

        </Grid>



        <GridSplitter Name="gridSplitter" 
                      Grid.Column="1" 
                      Grid.Row="1" 
                      HorizontalAlignment="Stretch" 
                      Width="3"
                      Background="{DynamicResource BorderBrush}" />


        <WrapPanel Grid.Row="2" HorizontalAlignment="Stretch">
            <StackPanel Margin="20, 5, 10, 5"
                        VerticalAlignment="Top">
                <TextBlock Text='Цветовая тема'
                           Style="{DynamicResource HeaderTextBlockStyle}"
                           FontSize="13" />
                <ComboBox x:Name="StyleBox" Width="95"  />
            </StackPanel>
            <Button x:Name="SaveButton" 
                    VerticalAlignment="Top" 
                    Margin="10, 5" 
                    Content="Сохранить" 
                    Click="SaveItems_Click" />
            <Button x:Name="SaveAndExitButton" 
                    VerticalAlignment="Top" 
                    Margin="10, 5" 
                    Content="Сохранить и выйти" />
            <Button x:Name="ExitButton" 
                    VerticalAlignment="Top" 
                    Margin="10, 5" 
                    Content="Выйти без сохранения" 
                    Click="ExitButton_Click" />
        </WrapPanel>

        <!-- Область уведомлений.-->
        <Border x:Name="NotificationArea"
                      Style="{DynamicResource NotificationAreaStyle}"
                      Grid.Column="2"
                      Grid.Row="2" 
                      Margin="10">
            <ScrollViewer ScrollViewer.HorizontalScrollBarVisibility="Auto"
                          ScrollViewer.VerticalScrollBarVisibility="Auto">
                <TextBlock x:Name="Notifications"
                           TextWrapping="NoWrap"
                           Style="{DynamicResource NotificationsStyle}"
                           VerticalAlignment="Stretch"
                           HorizontalAlignment="Stretch"
                           Margin="2" />
            </ScrollViewer>
        </Border>
    </Grid>
</Window>
